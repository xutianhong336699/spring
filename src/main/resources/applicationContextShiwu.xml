<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
   <context:property-placeholder location="classpath:jdbc1.properties"></context:property-placeholder>

   <!--JDBC数据源-->
   <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="${jdbc.driver}"></property>
      <property name="url" value="${jdbc.url}"></property>
      <property name="username" value="${jdbc.username}"></property>
      <property name="password" value="${jdbc.password}"></property>
   </bean>

   <bean id="accountDao" class="cn.shiwu.dao.AccountDaoImpl">
      <property name="dataSource" ref="datasource"></property>
   </bean>

   <bean id="stockDao" class="cn.shiwu.dao.StockDaoImpl">
      <property name="dataSource" ref="datasource"></property>
   </bean>
   
   <bean id="stockService" class="cn.shiwu.service.StockServiceImpl">
      <property name="accountDao" ref="accountDao"></property>
      <property name="stockDao" ref="stockDao"></property>
   </bean>

   <!--事务管理器-->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="datasource"></property>
   </bean>

   <!--事务处理-->

   <!--方式一：事务代理工厂Bean-->
  <!-- <bean id="proxyBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager" ref="transactionManager"></property>
      <property name="target" ref="stockService"></property>
      &lt;!&ndash;事务属性   隔离级别  传播行为&ndash;&gt;
      <property name="transactionAttributes">
         <props>
            <prop key="buyStock">ISOLATION_DEFAULT,PROPAGATION_REQUIRED,-MyException</prop>
         </props>
      </property>
   </bean>-->

   <!--方式二：注解驱动-->
   <!--<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->

   <!--方式三：aspectj方式 -->
   <tx:advice id="stockAdvice" transaction-manager="transactionManager">
      <tx:attributes>
         <!--对所有需要事务环境的方法的事务属性策略的一个具体细化操作-->
         <tx:method name="buy*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="MyException" />
         <tx:method name="select*" isolation="DEFAULT" propagation="REQUIRED" read-only="true" />
      </tx:attributes>
   </tx:advice>

   <aop:config>
      <aop:pointcut id="mypoint" expression="execution(* *..service.StockServiceImpl.*(..))"></aop:pointcut>
      <aop:advisor advice-ref="stockAdvice" pointcut-ref="mypoint"></aop:advisor>
   </aop:config>

</beans>